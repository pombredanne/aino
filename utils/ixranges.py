
import xml.dom
import xml.dom.minidom
import sys, cStringIO

xid = 0

def handle_children(node):
                
        global xid
        
        if node.nodeType != node.ELEMENT_NODE and\
           node.nodeType != node.DOCUMENT_NODE:
                return
        
        txid = 0
        if node.attributes:
                txid = float(node.attributes['N'].value)
        
        if node.hasChildNodes():
                print >> out_f, "\n#define XID_%s_F %d" % (node.nodeName, xid)
                orig_xid = xid
                
                for child in node.childNodes:
                        handle_children(child)
                
                if txid:
                        if xid > orig_xid + txid:
                                print "Range overflow in block %s" %\
                                        node.nodeName
                                sys.exit(1)
                        xid = orig_xid + txid
                else:
                        xid -= 1

                print >> out_f, "#define XID_%s_L %d" % (node.nodeName, xid)
                xid += 1
        else:
                xid += txid
                print >> out_f, "#define XID_%s %d" % (node.nodeName, xid)
                
                if not txid:
                        xid += 1

def scons_action(target, source, env):
        global out_f
      
        if target:
                out_f = file(str(target[0]), 'w')
        else:
                out_f = sys.stdout
        
        print >> out_f, """/*
 Automatically generated by ixranges.py from %s
 Do not modify this file
*/

#ifndef __IXRANGES_H__
#define __IXRANGES_H__
""" % str(source[0])

        
        dom = xml.dom.minidom.parse(str(source[0]))
        handle_children(dom.documentElement)

        print >> out_f, "\n#endif /* __IXRANGES_H__ */"

if __name__ == "__main__":
        scons_action(None, [sys.argv[1]], None)

